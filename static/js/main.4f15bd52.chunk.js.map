{"version":3,"sources":["components/Header.js","components/SearchButton.js","components/ChangeSearchTypeButton.js","components/SearchCategoryPanel.js","components/SearchByNamePanel.js","components/SearchByYearPanel.js","genres.js","components/SearchByGenrePanel.js","components/SearchByScorePanel.js","components/SearchInfoPanel.js","components/LeftPanel.js","components/AnimeCard.js","components/RightPanel.js","App.js","index.js"],"names":["Header","className","SearchButton","fetchData","onClick","ChangeSearchTypeButton","text","searchType","setSearchType","SearchCategoryPanel","map","key","SearchByNamePanel","setSearchQuery","searchQuery","placeholder","onChange","event","value","target","prevState","SearchByYearPanel","query","year","Number","defaultValue","season","options","label","genres","Action","Adventure","Cars","Comedy","Dementia","Demons","Mystery","Drama","Ecchi","Fantasy","Game","Historical","Horror","Kids","Magic","MartialArts","Mecha","Music","Parody","Samurai","Romance","School","SciFi","Shoujo","ShoujoAi","Shounen","ShounenAi","Space","Sports","SuperPower","Vampire","Yaoi","Yuri","Harem","SliceOfLife","Supernatural","Military","Police","Psychological","Thriller","Seinen","Josei","genreOptions","Object","keys","genre","toLowerCase","SearchByGenrePanel","isMulti","name","labels","e","SearchByScorePanel","SearchInfoPanel","LeftPanel","AnimeCard","result","image","mal_id","url","image_url","title","airing","score","episodes","synopsis","style","background","RightPanel","searchResults","App","useState","setSearchResults","Name","Year","Genre","Score","urlFilters","IDs","join","fetch","then","res","json","data","anime","results","catch","err","Error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f15bd52.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <nav className=\"nav\">\r\n            Anime <span className=\"secondary\">Search</span>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\n\r\nfunction SearchButton({fetchData}) {\r\n    return (\r\n        <button className=\"search-button\" onClick={fetchData}>\r\n            Search\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SearchButton;\r\n","import React from 'react'\r\n\r\n\r\nfunction ChangeSearchTypeButton({text, searchType, setSearchType}) {\r\n    return (\r\n        <button className={`change-button ${searchType === text ? 'active' : ''}`} onClick={()=>setSearchType(text)}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default ChangeSearchTypeButton\r\n","import React from \"react\";\r\nimport ChangeSearchTypeButton from \"./ChangeSearchTypeButton\";\r\n\r\nfunction SearchCategoryPanel({setSearchType, searchType}) {\r\n    return (\r\n        <div className=\"search-panel\">\r\n            <div className=\"label\">Search By: </div>\r\n            {[\"Name\", \"Year\", \"Genre\", \"Score\"].map((text, key) => {\r\n                return <ChangeSearchTypeButton text={text} key={`button-${key}`} setSearchType={setSearchType} searchType={searchType}></ChangeSearchTypeButton>;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchCategoryPanel;\r\n","import React from \"react\";\r\n\r\nfunction SearchByNamePanel({setSearchQuery, searchQuery, searchType}) {\r\n    const handleChange = event => {\r\n        const value = event.target.value;\r\n        setSearchQuery(prevState => ({...prevState, [searchType]: value}));\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <div className=\"input-wrapper\">\r\n                <label className=\"label\">Name:</label>\r\n                <input placeholder=\"Type name of a show...\" onChange={handleChange} value={searchQuery[searchType] || \"\"}></input>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchByNamePanel;\r\n","import React, {useState} from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nfunction SearchByYearPanel({setSearchQuery, searchQuery, searchType}) {\r\n    const seasons = [\r\n        {value: \"spring\", label: \"Spring\"},\r\n        {value: \"summer\", label: \"Summer\"},\r\n        {value: \"fall\", label: \"Fall\"},\r\n        {value: \"winter\", label: \"Winter\"},\r\n    ];\r\n\r\n    const handleYearChange = event => {\r\n        const query = searchQuery[searchType];\r\n        query.year = event.target.value;\r\n        if (!Number(query.year)) return;\r\n        setSearchQuery(prevState => ({...prevState, [searchType]: query}));\r\n    };\r\n\r\n    const handleSeasonChange = event => {\r\n        const query = searchQuery[searchType];\r\n        query.season = event.value;\r\n        setSearchQuery(prevState => ({...prevState, [searchType]: query}));\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <div className=\"input-wrapper\">\r\n                <label className=\"label\">Year:</label>\r\n                <input placeholder=\"Type name of a show...\" onChange={handleYearChange} value={searchQuery[searchType].year}></input>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n                <label className=\"label\">Season:</label>\r\n                <Select defaultValue={searchQuery[searchType].season} onChange={handleSeasonChange} options={seasons} className=\"select\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchByYearPanel;\r\n","const genres = {\r\n    Action: 1,\r\n    Adventure: 2,\r\n    Cars: 3,\r\n    Comedy: 4,\r\n    Dementia: 5,\r\n    Demons: 6,\r\n    Mystery: 7,\r\n    Drama: 8,\r\n    Ecchi: 9,\r\n    Fantasy: 10,\r\n    Game: 11,\r\n    Historical: 13,\r\n    Horror: 14,\r\n    Kids: 15,\r\n    Magic: 16,\r\n    MartialArts: 17,\r\n    Mecha: 18,\r\n    Music: 19,\r\n    Parody: 20,\r\n    Samurai: 21,\r\n    Romance: 22,\r\n    School: 23,\r\n    SciFi: 24,\r\n    Shoujo: 25,\r\n    ShoujoAi: 26,\r\n    Shounen: 27,\r\n    ShounenAi: 28,\r\n    Space: 29,\r\n    Sports: 30,\r\n    SuperPower: 31,\r\n    Vampire: 32,\r\n    Yaoi: 33,\r\n    Yuri: 34,\r\n    Harem: 35,\r\n    SliceOfLife: 36,\r\n    Supernatural: 37,\r\n    Military: 38,\r\n    Police: 39,\r\n    Psychological: 40,\r\n    Thriller: 41,\r\n    Seinen: 42,\r\n    Josei: 43,\r\n};\r\n\r\nexport default genres;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport genres from \"../genres\";\r\n\r\nconst genreOptions = Object.keys(genres).map(genre => {\r\n    return {value: genre.toLowerCase(), label: genre};\r\n});\r\n\r\nfunction SearchByGenrePanel({searchQuery, setSearchQuery, searchType}) {\r\n    function handleChange(event) {\r\n        const labels = event.map(e => e.label);\r\n        setSearchQuery(prevState => ({...prevState, [searchType]: labels}));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"input-wrapper\">\r\n                <label className=\"label\">Season:</label>\r\n                <Select isMulti name=\"genres\" onChange={handleChange} options={genreOptions} className=\"select\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchByGenrePanel;\r\n","import React from \"react\";\r\n\r\nfunction SearchByScorePanel({setSearchQuery, searchQuery, searchType}) {\r\n    const handleChange = event => {\r\n        const value = event.target.value;\r\n        setSearchQuery(prevState => ({...prevState, [searchType]: value}));\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <div className=\"input-wrapper\">\r\n                <label className=\"label\">Score:</label>\r\n                <input placeholder=\"Will find shows above selected score\" onChange={handleChange} value={searchQuery[searchType] || \"\"}></input>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchByScorePanel;\r\n","import React from 'react'\r\nimport SearchByNamePanel from './SearchByNamePanel.js'\r\nimport SearchByYearPanel from './SearchByYearPanel.js'\r\nimport SearchByGenrePanel from './SearchByGenrePanel.js'\r\nimport SearchByScorePanel from './SearchByScorePanel.js'\r\n\r\nfunction SearchInfoPanel({searchType, searchQuery, setSearchQuery}) {\r\n    return (\r\n        <>\r\n            {searchType === \"Name\" ? <SearchByNamePanel searchQuery={searchQuery} setSearchQuery={setSearchQuery} searchType={searchType}></SearchByNamePanel> : null}\r\n            {searchType === \"Year\" ? <SearchByYearPanel searchQuery={searchQuery} setSearchQuery={setSearchQuery} searchType={searchType}></SearchByYearPanel> : null}\r\n            {searchType === \"Genre\" ? <SearchByGenrePanel searchQuery={searchQuery} setSearchQuery={setSearchQuery} searchType={searchType}></SearchByGenrePanel> : null}\r\n            {searchType === \"Score\" ? <SearchByScorePanel  searchQuery={searchQuery} setSearchQuery={setSearchQuery} searchType={searchType}></SearchByScorePanel> : null}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchInfoPanel\r\n","import React from \"react\";\r\nimport SearchButton from \"./SearchButton.js\";\r\nimport SearchCategoryPanel from \"./SearchCategoryPanel.js\";\r\nimport SearchInfoPanel from \"./SearchInfoPanel.js\";\r\n\r\nfunction LeftPanel({searchType, setSearchType, searchQuery, setSearchQuery, fetchData}) {\r\n    return (\r\n        <div className=\"left-panel\">\r\n            <SearchCategoryPanel searchType={searchType} setSearchType={setSearchType}></SearchCategoryPanel>\r\n            <SearchInfoPanel searchType={searchType} searchQuery={searchQuery} setSearchQuery={setSearchQuery}></SearchInfoPanel>\r\n            <SearchButton fetchData={fetchData}></SearchButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftPanel;\r\n","import React from \"react\";\r\n\r\nfunction AnimeCard({result}) {\r\n    const id = result.mal_id;\r\n    const url = result.url;\r\n    const image = result.image_url;\r\n    const name = result.title;\r\n    const airing = result.airing;\r\n    const score = result.score;\r\n    const desc = result.synopsis;\r\n    const episodes = result.episodes;\r\n\r\n    return (\r\n        <div className=\"card\" style={{background: `url(${image})`}}>\r\n            <div className=\"title\">\r\n                <span>{name}</span>\r\n                <span className={airing ? \"airing\" : \"ended\"} title={airing ? \"Airing\" : \"Ended\"}>\r\n                    .\r\n                </span>\r\n            </div>\r\n            <div className=\"info\">\r\n                <span>{episodes}</span>\r\n                <span>{score}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnimeCard;\r\n","import React from \"react\";\r\nimport AnimeCard from \"./AnimeCard\";\r\n\r\nfunction RightPanel({searchResults}) {\r\n    return (\r\n        <div className=\"card-container\">\r\n            {searchResults.map(result => {\r\n                return <AnimeCard result={result} key={result.mal_id}></AnimeCard>;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightPanel;\r\n","import \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport {useState} from \"react\";\nimport LeftPanel from \"./components/LeftPanel\";\nimport RightPanel from \"./components/RightPanel\";\nimport genres from \"./genres\";\n\nfunction App() {\n    const [searchType, setSearchType] = useState(\"Name\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [searchQuery, setSearchQuery] = useState({Name: \"\", Year: {year: 1990, season: \"Spring\"}, Genre: [], Score: 0});\n\n    const url = `https://api.jikan.moe/v3/`;\n\n    const fetchData = () => {\n        let urlFilters = \"\";\n        switch (searchType) {\n            case \"Name\":\n                urlFilters = `search/anime?q=${searchQuery[searchType]}`;\n                break;\n            case \"Year\":\n                urlFilters = `season/${searchQuery[searchType].year}/${searchQuery[searchType].season}`;\n                break;\n            case \"Genre\":\n                let IDs = searchQuery[searchType].map(e => genres[e]);\n                urlFilters = `search/anime?genre=${IDs.join(\",\")}`;\n                break;\n            case \"Score\":\n                urlFilters = `search/anime?score=${searchQuery[searchType]}&order_by=score&sort=descending`;\n                break;\n        }\n\n        fetch(url + urlFilters)\n            .then(res => res.json())\n            .then(data => {\n                searchType == \"Year\" ? setSearchResults(data.anime) : setSearchResults(data.results);\n            })\n            .catch(err => {\n                throw new Error(err);\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Header></Header>\n            <LeftPanel searchType={searchType} setSearchType={setSearchType} searchQuery={searchQuery} setSearchQuery={setSearchQuery} fetchData={fetchData}></LeftPanel>\n            <RightPanel searchResults={searchResults}></RightPanel>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}